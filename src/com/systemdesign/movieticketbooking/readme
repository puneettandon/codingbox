Movie Ticket Booking Application

Implement a movie ticket booking application for theatre. Refer to the following details:

    -> A Theatre has Screens that run shows for different movies.Each show has a particular movie , start time , duration and is played in a particular
        screen in the theatre. Each screen has an arrangement of seats that can be booked by users
    -> Assume all users are registered, authenticated, and logged into the application.
    -> Once a User selects a particular show to book tickets for , a UserBookingSession starts.Within this UserBookingSession, a User will be able
       to get the available seats for the show and select the seats he wishes to book. It is good to have for the application to have limits
       on number of seats a User can book in a ticket.
    -> Once the user has selected a group of seats, these seats should become Temporary_UNAvailable to all other users.
    -> The User then proceeds to make payment which can be either success or failure
    -> If payment failed, user can retry payment  for a maximum number of times. Beyond maximum retries, the seats are made available.
    -> If payment succeeds, ticket or booking confirmation is generated and made available to the user.
        The UserBookingSession is closed and seats are made Permanently_Unavailable


Problems:

    Demonstrate the following scenarios:
    2 concurrent Users U1, U2 in the application. The Users can retrieve available shows and select one show.

    Case 1:
    1. Say U1 and U2 select same show.
    2. U1 requests for and get all available seats for this show
    3. U1 selects group of seats and proceeds to pay
    4. U2 request for and gets all the available seats for this show.U2 should not see the seats selected by U1 as Available . Payments Succeeded by U1
    5. U1 receives the ticket with seats confirmed


    Case 2:
    1. Say U1 and U2 selects the same show.
    2. U1 and U2 requests for and gets all available seat for this show.
    3  U1 selects group of seats.
    4. U1 proceeds to pay
    5. U2 requests for and get all available seats for this show. U2 should not see the seats selected by U1 as available .
    6. Payment failed for U1 . Assume maximum retries as zero just for demo. Also show in another scenario where U1's UserBookingSession is
        explicitly closed by U1 before payment is completed
    7. U2 again requests for and get all available seats for this show.U2 should now see the seats previously selected by U1 as available.


    Case 3:
    1. Say U1 and U2 select same show.
    2. U1 and U2 requests for and gets all available seat for this show.
    3. U1 selects group of seats and proceeds to pay
    4. U2 selects overlapping group of seats and proceeds to pay. U2 should be notified that "one or more of the selected seats are
        not available at this moment."


Bonus:
Have configurable timeout for UserBookingSession.Show that if User selects and payment is not completed by timeout,then USerBookingSession
is closed and seats selected are made Available.
