Payment Gateway System Design

https://www.youtube.com/watch?v=NxjGFIgFCbg
Example - Paypal , Razorpay

                                    Terms to Note

What is payment gateway?
-> A service which allows us to make payments online while making purchase from e-commerce website.
-> It supports paying through card, internet banking, e-wallets etc.
-> Mostly integrated with websites like e-commerce and it will support the seller to basically collect payment in
various ways from the user.User can buy item using credit card , debit card, internet banking e-wallet
gift card all those things. so everything will be supported by the payment gateway.

What is PSP(Payment Service Provider)?
-> It is the service/person/system which make sure that money is transferred from buyer's account to merchant's account.
-> Will be integrated as part of payment gateway itself.

What is Issuer Bank?
-> This is the bank to which Buyer is related to.So this is the bank which has issued the debit card or the credit card
or the upi to the user so that they can go and buy stuff online.

What is Card Association?
-> This is the entity which links a card number to it's relevant Issuing Bank like Visa,Mastercard,American Express.

What is PCI DSS (Payment Card Industry Data Security Standard)?
-> It is the security standard , if the seller is compliant with this standard then payment page can be generated
on seller's page else they need to redirect the request to payment gateway's payment page, which is compliant to
standard.
-> If you want to store a secure data which is related to your card so if you want to store the card number,
the expiry date and name of person in your database you need to be compliant with this standard so all the payment
gateway should be compliant with this standard.

What is Acquiring Bank?
-> Bank associated with the seller's payment processor(Think of it as an e-POS machine).

What is 3D secure?
-> It is  a protocol defined by visa and now used by all card association for added security of online card
transactions.

What is ISO-8583?
-> EFT switch message format for card payment processing


--------------------------------------------------------------------------------

                                    How Card Payment works?

-> For card payment, there will a UI where your details will be captured. So this UI can be on the seller side or
like amazon or flipkart or it can be on payment gateway side. So payment gateway can also expose the UI if the
ecommerce website is not PCI DSS compliant. so in that particular case in the payment gateways UI you will enter
all your card details.
-> Once the card details is entered over ssl. This is sent to merchants application so this is the case where your
merchant is integrated with payment gateway and the merchant application will also have a unit or a service which
will be used for payment processing so they will not do much it will just capture those details and in secured
way it will transfer it to the payment gateway.
-> Now over ssl , this is sent to payment gateway. what payment gateway now will do is like we talked about all these
messages will be in xml , json or the format which merchant application understand or payment gateway understand or
whatever merchant has decided to use the the format for their application but that does not work in the payment
industry.
-> From payment gateway side it will convert that xml json or any other format into iso 8583 standard
-> So this will be sent to a payment processor now payment processor is used by merchants acquiring banks.
In most cases payment gateway and payment processor will be used together. There are some cases where payment processor
is separate from payment gateway but in this scenario we will say that both are separate entity.
-> Payment processor will receive the eft switch message so it has to understand that I need to make payment
using card transaction so what it will do is it will send the message to the card association so card association are
the entities like visa/mastercard
-> What these entities will do is they will receive this message and they know that which particular card number is
associated with which bank so suppose you have a card number . Card Association has a directory and there they know
which set of number is issued to which bank.
-> And they will redirect the request to the issuer bank which is hdfc bank or it will redirect the message that it
has got the correct issuer bank now issuer bank it will make that transaction or it will verify the transaction
whether the card is valid or not whether it belongs to the correct user whether the cvv given is right whether
pin given is right all those authorization will happen and then it will check whether there is balance
in the account for the given payment or not.
-> So if everything is successful then issuer bank will authorize the payment
and it will deduct the balance and it will send the message back to card association saying that I have received
the payment and transaction is good.and then card association will go back to payment processor go back to
payment gateway  and finally the sale will be done
-> This is the overall picture of how payment happens.
-> Now at any point if there is failure , then the same has to be handled by payment gateway using payment processor

---------------------------------------------------------------------------------------------------------

                                How 3D secure Card Payment works?

-> Difference b/w normal payment and 3D secure card payment.For 3D secure everything is same till payment gateway
3D means 3 Domains involved.
-> 1 Domain - Acquiring Domain which is on the payment processor side with the acquiring bank. This is small
plugin which will be given by the acquiring bank and this domain comes with a small piece of software and that
software is used for encrypting the message and decrypting the message also so all those will talk about how all those
works in the coming session
-> So what you need to understand is that once the payment gateway received the iso 8583 message what acquiring
domain will do is it will now convert it into a secured message it will encrypt it or whatever is the logic that
has been written for that particular piece of software so it will do its job and finally it will send the message
to the card association
-> so here seller Domain will send the card detail and to inter portability domain so what inter portability domain is
that on the card association side is that on the card association side we have an inter portability domain which is
nothing but a set of directory , it will make a check there that whether actually a issuing bank is existing for
the given transaction or not. so it will the directory from where it will check and if the card is fake or it is not
valid (may be expired ) . so in those situations it will not go even further it will basically come out from here only
saying card is not valid and transaction has failed.So that's the use of inter portability
-> If card is valid one this inter portability domain will send response back to the acquiring domain saying that it
is success and it will give you url which will be for your access control server.
-> Access Control Server is the server which is on the issuing bank side issuing bank is the bank which has given you
the card.So it will give that server detail and url to the acquiring bank and now the payment processor can make the
request to the issuer with this access control server link and it can send or receive the secure message and it will
send the actual request which is the card detail with cvv pin everything to the issuer bank and here in the access
control server side again there is a piece of software which is running which can decode this message and it will
do the authorization.
-> so once the authorization is done, everything is checked here and if the payment is successful in that case
or even if the payment is failure in that case it will be sent back to the processor with a code and that code will
tell us what is the reason for failure or if it is success then transaction is success.
-> Now same request from here will go to payment gateway then it will be displayed that order will be placed
otherwise failure message will be displayed so on that payment has failed and what is the reason for failure.


-----------------------------------------------------------------------------------------------------------------

                      Requirements for System Design of Payment Gateway



Functional Requirement
-> Allows multiple ways of payment like card ,upi , netbanking etc
-> Secure Payment Details -
-> Secure Transactions
-> Avoid double payment - (should not happen that the issuer is charged twice or the buyer is charged twice)
-> Fast Response
-> Handle Timeout and failure ( should be mechanism of retry if transaction is timed out or failed )


Non Functional Requirement
-> Highly Consistent
-> Highly Available (because if it is not available there will be failure in transaction in between and no one is going to use it)
-> Scalable

trade off partition tolerant


------------------------------------------------------------------------------------------------------

                                Design Considerations

-> Multiple subsystems to handle different kind of payments like card, internet banking, upi etc. example -
one api to handle card payment, one api to handle upi payment, one to handle internet banking etc .....because all these
modes are different (not related to each other) so different types of payments will follow different procedures and
that is wny it should be decoupled.
-> Secure payment details, may be use some tools like Protegrity to encrypt PII fields as you are going to store the
data or transaction in database. so required to secure the payment details.All details should be encrypted for
that purpose
-> Use SSL - whenever sending the transaction you should use SSL. cannot send in plain text way.
-> Consistency and Availability should be chosen over partition tolerance, one way will be to save the transaction
message Ist and then use it. There should be some way in which if there is a failure we should be able to handle that
and avoid the duplicate payment or the loss of money for buyer or seller.So that's way we need to save the transaction
and also to secure that transaction.
-> Need scalable system because number of payments per day can be like 10M


--------------------------------------------------------------------------------------------------------------------


                          High Level Design Architecture

                          Payment Ingestion

-> So we have the seller website.From seller website we will get the all card details or seller will send the
card detail to us directly or it will send the request to payment gateway to expose the UI to the buyer so that
they can enter the card detail there.
-> So once we have exposed the UI or the seller has sent the details to us what we need is we need an ingestion
system where we need to ingest the payment that is coming through.
-> So what payment ingestion service will do is it will ingest the transaction it will save the transaction in our
database.
-> Now to save this transaction we need a transaction id generator . It will create a unique id which will be
associated to this particular payment.Since now it is associated to this particular payment anytime we need to retry
or some failure happens or we need to debug we can use this id to track this whole payment because in our
scenario we will send the request to outside and from outside we will get the response. Outside means the if it is
a card transaction we are making a call to the card association we are making a call to the control access
server of the issuer bank . so everywhere this transaction id should be used for tracking of this transaction in an
atomic way.
-> So once we have the transaction id generator we will save the detail in our database. we will save the
transaction id and other payment details . Other payment detail comprises of type of payment that we are getting from
sellers website whether it is card or upi or any other payment.
-> The first column is transaction id and second column can be your type of payment then you will have another column
which will store the id of that payment type. ie so if it is card payment so need to store the card number
if it is internet banking then you might need to store the internet banking userid if it is upi you need to store
upi id. And one column for amount of the transaction. And you also need to store this transaction belongs to which
merchant basically when clearing happens which merchant bank or which merchant account should be credited with the
payment
-> As data we are getting is structured  so RDBMS is good choice
-> We can also have another database which will pull the data from here and store for analytics purpose.
-> so once we have stored the data in our database we will put the message in a distributed queue because we want to
decouple the injection system from processing system
-> And Payment processor system will pick up the message from queue and it will do its processing.
-> finally once in a very good scenario once the payment is done it is successful or if it fails
payment processor will update the database for this transaction id saying whether it is successful or failed.
-> How you will make sure the query on this RDBMS  database is very fast.so you need a partition strategy or some way
in which you can speed up the query.One way is you partition all your table based on date so everyday will have one
partition . Now you can create a sub partition for rdbms that sub partition can be based on type of the transaction
like upi, net banking , card . Date - arranged partition ....sub-partition - list partition (partition pruning
for more info)
-> This is overall architecture of payment ingestion
-> There will be analytics service as well - why we need analytics system here is that it can talk to the queue and
it can also pull some data from this database(RDBMS)  or better way will be that there can be a service (a separate
service) which will pull the data from this database.
-> what it will do is it can put it in some other database which can be rdbms or it can be a no sql database also.
No-SQL columnar database can be a good choice if you want to perform analytics like handling the failure scenario
so if you pull all the detail from this database where there was a failure for a particular type of card transaction
or a internet banking So what you can do is the analytics system can compute a stats that if the transaction was
coming from visa card x% of transaction failed today. if it was coming from a upi payment y% of transactions failed
today.
-> Now these analytics can be sold to seller which is amazon or flipkart . They can also show the data to the user
during payment that failure percentage is high for this particular payment method.

------------------------------------------------------------------------------------------------------------------

                            Relevant APIs

-> Payment Ingestion
    -> getFormForCardPayment
    -> postRequestForCardPayment
    -> getFormForUPIPayment
    -> postRequestForUPIPayment
    -> getFormForInternetBanking
    -> postRequestForInternetBanking
    -> getTransactionIDByTransactionType

-> PaymentProcessor
    -> processUPIPayment
    -> processCardPayment
    -> processInternetBankingPayment
    -> retryOnFailure
    -> getISO8583FormatMessage

----------------------------------------------------------------------------------------------------------------

                            Payment Processor Architecture

Continuing from payment ingestion
-> We know that once we have put the message from ingestion service into distributed queue, it will be picked by the
payment processing service.So what payment processing service will do is , it will have a plugin and this particular
plugin will send the request to the plugin for acquiring domain it will send the request to the inter portability
domain and from there it will get the url for the access control server  so all those piece of code will go in payment
processing service , it will have all those modules to do the payment and finally once the payment is done then it
will update the status or it will update the status of the payment in the database and in case of failure what it
will do is it will put the message in a same distributed queue but topic will be different . so it can put the message
in a failed queue so it can be the same queue that we are using if you are using kafka or any other distributed queue
so you create new topic for just dumping the failed messages.so once the failure is done you update the message you
update the status in database saying that this payment has failed and put the message in queue saying that this is the
transaction which has failed .
-> why this queue is helpful - because there will be another service will be your payment retry service will be
listening to this particular queue and what it will do is it will check for that transaction that what is the status
if it has failed then it will retry read write that particular payment and since the transaction id is unique so
when it makes a request to the card association or issuer bank with the same transaction id it will get status
from them that this payment was already processed  so if it was already processed and it failed in between in that
particular system this payment retry service will update the database simply saying that the payment has been
successful it will not duplicate the payment so that is the benefit of this retry
-> And finally we have a clearing service so once all the payment is done so till now whatever we are talking about was
from the buyers point of view now when the buyers point of view is immediately the money was deducted from buyers bank
and it was parked somewhere now from this somewhere account or in some account it has to go to the account of seller
So this clearing service it will read the database and it will pick up all the successful transactions and in the
database also we can one more column which will say that transaction is cleared or not .so it will pick up all the
transactions for that day which is not clear so this clearing will happen like once in a day at the end of day or it
can happen like twice in a day
-> So what this clearing process will do is it will pick all the transactions that are not cleared yet and it will
settle the account .so if suppose seller 1 , there were 10 users who bought the product from seller one so whatever is
the amount that the seller one has to send or whatever is the amount that seller one will get after deducting of
course the charge for the payment processing and e-commerce site the same will be credited into their account
so that part of handling will again be done by clearing service so clearing service will again follow the same procedure
which we were using for card transaction only this time it will use the internet banking facility or the clearing
house facility . Initially when the money is deducted from buyer's account it was parked into the account which was
owned by acquiring bank of the seller or the merchant basically which in this case is amazon .Now when clearing
happens the money will be deducted from the acquiring banks account and it will be sent to each of the individual
seller so that is where the payment clearing service will come into picture and it will be part of payment
gateway itself
-> If this transaction has failed the same logic will apply it will put the message in failed queue and a retry will
happen
-> For clearing service , a transaction id will be generated for clearing so this transaction id will basically map
all the transaction that happened for that seller on that particular day or whatever is the clearing time

